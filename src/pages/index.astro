---
import { getCollection } from "astro:content";
import BaseLayout from "@/layouts/BaseLayout.astro";
import EntriesOne from "@/components/entries/EntriesOne.astro";
import Hero from "@/components/landing/Hero.astro";
import Cta from "@/components/global/Cta.astro";
const allPosts = await getCollection("posts");
const tags = [...new Set(allPosts.map((post) => post.data.tags).flat())];

import ViewTransitions from "astro/components/ViewTransitions.astro";

// Sort posts by date in descending order (newest first)
const sortedPosts = allPosts.sort(
  (a, b) =>
    new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime(),
);
---

<BaseLayout>
  <Hero />
  <section>
    <div class="px-4 md:px-12 mx-auto max-w-7xl py-12 lg:px-32">
      <ol role="list" class="flex flex-wrap gap-3">
        {
          tags.map((tag) => (
            <li class="rounded-sm bg-[var(--clr-tags)] px-2 p-1  t inline-flex items-center uppercase mx-auto hover:bg-[var(--clr-tags-hover)] text-xs font-medium text-black">
              <a href={`/tags/${tag}`}>{tag}</a>
            </li>
          ))
        }
      </ol>
      <ul class="grid mt-12 gap-4 lg:grid-cols-3 sm:grid-cols-2">
        {
          sortedPosts.map((post) => (
            <EntriesOne
              url={"/posts/" + post.slug}
              title={post.data.title}
              description={post.data.description}
              alt={post.data.title}
              pubDate={post.data.pubDate.toString().slice(0, 10)}
              author={post.data.author}
              image={post.data.image.url}
              tags={post.data.tags}
              mediaTransitionName={`media-image-${post.data.id}`}
            />
          ))
        }
      </ul>
    </div>
  </section>
  <Cta />
</BaseLayout>
